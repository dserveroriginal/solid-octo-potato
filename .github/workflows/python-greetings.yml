name: Python Microservice Delivery Pipeline

on:
  push:
    branches:
      - main

jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone Python Greetings Repository
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Install Python dependencies
        run: pip3 install -r requirements.txt
        working-directory: python-greetings

  deploy:
    needs: install-pip-deps
    strategy:
      matrix:
        environment: [dev, staging, preprod, prod]
        port: [7001, 7002, 7003, 7004]
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone Python Greetings Repository
        uses: actions/checkout@v4
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      - name: Stop existing service
        run: pm2 delete greetings-app-${{ matrix.environment }} || true
        working-directory: python-greetings

      - name: Start service with pm2
        run: pm2 start app.py --name greetings-app-${{ matrix.environment }} -- --port ${{ matrix.port }}
        working-directory: python-greetings

  tests:
    needs: deploy
    strategy:
      matrix:
        environment: [dev, staging, preprod, prod]
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone JS API Framework Repository
        uses: actions/checkout@v4
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework

      - name: Install npm dependencies
        run: npm install
        working-directory: course-js-api-framework

      - name: Run API Tests
        run: npm run greetings greetings_${{ matrix.environment }}
        working-directory: course-js-api-framework

